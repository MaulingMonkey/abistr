<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
    <!--
        https://learn.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects
        https://learn.microsoft.com/en-us/visualstudio/debugger/format-specifiers-in-cpp
    -->



    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::Unknown8&gt;">
        <DisplayString>{(char *)ptr,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::Unknown8&gt;">
        <DisplayString>{(char *)ptr.pointer,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr.pointer,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::Unknown8, *&gt;">
        <DisplayString>{(char *)buffer,s}</DisplayString>
        <Expand><ExpandedItem>buffer,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::CP437&gt;">
        <DisplayString>{(char *)ptr,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::CP437&gt;">
        <DisplayString>{(char *)ptr.pointer,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr.pointer,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::CP437, *&gt;">
        <DisplayString>{(char *)buffer,s}</DisplayString>
        <Expand><ExpandedItem>buffer,s</ExpandedItem></Expand>
    </Type>



    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::windows::System&gt;">
        <DisplayString>{(char *)ptr,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::windows::System&gt;">
        <DisplayString>{(char *)ptr.pointer,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr.pointer,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::windows::System, *&gt;">
        <DisplayString>{(char *)buffer,s}</DisplayString>
        <Expand><ExpandedItem>buffer,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::windows::CurrentThread&gt;">
        <DisplayString>{(char *)ptr,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::windows::CurrentThread&gt;">
        <DisplayString>{(char *)ptr.pointer,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr.pointer,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::windows::CurrentThread, *&gt;">
        <DisplayString>{(char *)buffer,s}</DisplayString>
        <Expand><ExpandedItem>buffer,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::windows::ConsoleInput&gt;">
        <DisplayString>{(char *)ptr,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::windows::ConsoleInput&gt;">
        <DisplayString>{(char *)ptr.pointer,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr.pointer,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::windows::ConsoleInput, *&gt;">
        <DisplayString>{(char *)buffer,s}</DisplayString>
        <Expand><ExpandedItem>buffer,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::windows::ConsoleOutput&gt;">
        <DisplayString>{(char *)ptr,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::windows::ConsoleOutput&gt;">
        <DisplayString>{(char *)ptr.pointer,s}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr.pointer,s</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::windows::ConsoleOutput, *&gt;">
        <DisplayString>{(char *)buffer,s}</DisplayString>
        <Expand><ExpandedItem>buffer,s</ExpandedItem></Expand>
    </Type>



    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::Utf8ish&gt;">
        <DisplayString>{(char *)ptr,s8}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr,s8</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::Utf8ish&gt;">
        <DisplayString>{(char *)ptr.pointer,s8}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr.pointer,s8</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::Utf8ish, *&gt;">
        <DisplayString>{(char *)buffer,s8}</DisplayString>
        <Expand><ExpandedItem>buffer,s8</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::Utf8&gt;">
        <DisplayString>{(char *)ptr,s8}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr,s8</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::Utf8&gt;">
        <DisplayString>{(char *)ptr.pointer,s8}</DisplayString>
        <Expand><ExpandedItem>(char *)ptr.pointer,s8</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::Utf8, *&gt;">
        <DisplayString>{(char *)buffer,s8}</DisplayString>
        <Expand><ExpandedItem>buffer,s8</ExpandedItem></Expand>
    </Type>



    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::Unknown16&gt;">
        <DisplayString>{ptr,su}</DisplayString>
        <Expand><ExpandedItem>ptr,su</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::Unknown16&gt;">
        <DisplayString>{ptr.pointer,su}</DisplayString>
        <Expand><ExpandedItem>ptr.pointer,su</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::Unknown16, *&gt;">
        <DisplayString>{(char *)buffer,su}</DisplayString>
        <Expand><ExpandedItem>buffer,su</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::Utf16ish&gt;">
        <DisplayString>{ptr,su}</DisplayString>
        <Expand><ExpandedItem>ptr,su</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::Utf16ish&gt;">
        <DisplayString>{ptr.pointer,su}</DisplayString>
        <Expand><ExpandedItem>ptr.pointer,su</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::Utf16ish, *&gt;">
        <DisplayString>{(char *)buffer,su}</DisplayString>
        <Expand><ExpandedItem>buffer,su</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::Utf16&gt;">
        <DisplayString>{ptr,su}</DisplayString>
        <Expand><ExpandedItem>ptr,su</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::Utf16&gt;">
        <DisplayString>{ptr.pointer,su}</DisplayString>
        <Expand><ExpandedItem>ptr.pointer,su</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::Utf16, *&gt;">
        <DisplayString>{(char *)buffer,su}</DisplayString>
        <Expand><ExpandedItem>buffer,su</ExpandedItem></Expand>
    </Type>



    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::Unknown32&gt;">
        <DisplayString>{ptr,s32}</DisplayString>
        <Expand><ExpandedItem>ptr,s32</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::Unknown32&gt;">
        <DisplayString>{ptr.pointer,s32}</DisplayString>
        <Expand><ExpandedItem>ptr.pointer,s32</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::Unknown32, *&gt;">
        <DisplayString>{(char *)buffer,s32}</DisplayString>
        <Expand><ExpandedItem>buffer,s32</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::Utf32ish&gt;">
        <DisplayString>{ptr,s32}</DisplayString>
        <Expand><ExpandedItem>ptr,s32</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::Utf32ish, *&gt;">
        <DisplayString>{(char *)buffer,s32}</DisplayString>
        <Expand><ExpandedItem>buffer,s32</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::Utf32ish&gt;">
        <DisplayString>{ptr.pointer,s32}</DisplayString>
        <Expand><ExpandedItem>ptr.pointer,s32</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrPtr&lt;abistr::encoding::Utf32&gt;">
        <DisplayString>{ptr,s32}</DisplayString>
        <Expand><ExpandedItem>ptr,s32</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::pointers::CStrNonNull&lt;abistr::encoding::Utf32&gt;">
        <DisplayString>{ptr.pointer,s32}</DisplayString>
        <Expand><ExpandedItem>ptr.pointer,s32</ExpandedItem></Expand>
    </Type>
    <Type Name="abistr::buffers::CStrBuf&lt;abistr::encoding::Utf32, *&gt;">
        <DisplayString>{(char *)buffer,s32}</DisplayString>
        <Expand><ExpandedItem>buffer,s32</ExpandedItem></Expand>
    </Type>



    <Type Name="abistr::encoding::windows::CodePage">
        <DisplayString Condition="__0 ==     0">{__0} = CP_ACP</DisplayString>
        <DisplayString Condition="__0 ==     1">{__0} = CP_OEMCP</DisplayString>
        <DisplayString Condition="__0 ==     2">{__0} = CP_MACCP</DisplayString>
        <DisplayString Condition="__0 ==     3">{__0} = CP_THREAD_ACP</DisplayString>
        <DisplayString Condition="__0 ==    42">{__0} = CP_SYMBOL</DisplayString>
        <DisplayString Condition="__0 ==   437">{__0} = "OEM - United States"</DisplayString>
        <DisplayString Condition="__0 ==  1251">{__0} = "ANSI - Latin I"</DisplayString>
        <DisplayString Condition="__0 == 65000">{__0} = CP_UTF7</DisplayString>
        <DisplayString Condition="__0 == 65001">{__0} = CP_UTF8</DisplayString>
        <DisplayString>__0</DisplayString>
    </Type>
    <Type Name="abistr::encoding::windows::PsuedoCodePage">
        <DisplayString Condition="__0 ==     0">{__0} = CP_ACP</DisplayString>
        <DisplayString Condition="__0 ==     1">{__0} = CP_OEMCP</DisplayString>
        <DisplayString Condition="__0 ==     2">{__0} = CP_MACCP</DisplayString>
        <DisplayString Condition="__0 ==     3">{__0} = CP_THREAD_ACP</DisplayString>
        <DisplayString Condition="__0 ==    42">{__0} = CP_SYMBOL</DisplayString>
        <DisplayString Condition="__0 ==   437">{__0} = "OEM - United States"</DisplayString>
        <DisplayString Condition="__0 ==  1251">{__0} = "ANSI - Latin I"</DisplayString>
        <DisplayString Condition="__0 == 65000">{__0} = CP_UTF7</DisplayString>
        <DisplayString Condition="__0 == 65001">{__0} = CP_UTF8</DisplayString>
        <DisplayString>__0</DisplayString>
    </Type>
</AutoVisualizer>
